project: ci-cd-with-gitops-demo
configVersion: 1
---
image: emailservice
context: src/emailservice
dockerfile: Dockerfile
---
image: emailservice-src
context: src/emailservice
dockerfile: Dockerfile
target: builder
---
image: productcatalogservice
context: src/productcatalogservice
dockerfile: Dockerfile
---
image: productcatalogservice-src
context: src/productcatalogservice
dockerfile: Dockerfile
target: builder
---
image: recommendationservice
context: src/recommendationservice
dockerfile: Dockerfile
---
image: shippingservice
context: src/shippingservice
dockerfile: Dockerfile
---
image: shippingservice-src
context: src/shippingservice
dockerfile: Dockerfile
target: builder
---
image: checkoutservice
context: src/checkoutservice
dockerfile: Dockerfile
---
image: checkoutservice-src
context: src/checkoutservice
dockerfile: Dockerfile
target: builder
---
image: paymentservice
context: src/paymentservice
dockerfile: Dockerfile
---
image: currencyservice
context: src/currencyservice
dockerfile: Dockerfile
---
image: cartservice
context: src/cartservice/src
dockerfile: Dockerfile
---
image: cartservice-src
context: src/cartservice/src
dockerfile: Dockerfile
target: builder
---
image: functional-tests
context: test/functional
dockerfile: Dockerfile

---
image: adservice-src
from: ghcr.io/werf/ci-cd-demo/openjdk:8-slim
shell:
  install:
  - cd /app
  - bash ./gradlew installDist
git:
- add: /src/adservice
  to: /app

---
image: adservice
from: ghcr.io/werf/ci-cd-demo/openjdk:8-slim
shell:
  install:
  - apt-get -y update
  - apt-get install -qqy wget
  - rm -rf /var/lib/apt/lists/*
  - export RUN GRPC_HEALTH_PROBE_VERSION=v0.4.11
  - wget -qO/bin/grpc_health_probe https://github.com/grpc-ecosystem/grpc-health-probe/releases/download/${GRPC_HEALTH_PROBE_VERSION}/grpc_health_probe-linux-amd64
  - chmod +x /bin/grpc_health_probe
docker:
  WORKDIR: /app
  EXPOSE: ["9555"]
  ENTRYPOINT: "/app/build/install/hipstershop/bin/AdService"
import:
- image: adservice-src
  after: install
  add: /app
  to: /app

---
image: frontend-src
from: ghcr.io/werf/ci-cd-demo/golang:1.17.5-alpine
git:
- add: /src/frontend
  to: /app
  stageDependencies:
    install:
    - go.mod
    - go.sum
    setup:
    - '**/*.go'
shell:
  beforeInstall:
  - apk add --no-cache ca-certificates git make build-base
  install:
  - cd /app ; go mod download
  setup:
  - cd /app ; go build -o /go/bin/frontend .
docker:
  WORKDIR: /app

---
image: frontend
from: ghcr.io/werf/ci-cd-demo/alpine
git:
- add: /src/frontend/templates
  to: /app/templates
- add: /src/frontend/static
  to: /app/static
import:
- image: frontend-src
  after: install
  add: /go/bin/frontend
  to: /app/server
docker:
  WORKDIR: /app
  EXPOSE: ["8080"]
  ENTRYPOINT: "/app/server"
